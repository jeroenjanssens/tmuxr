[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"The MIT License (MIT)","title":"The MIT License (MIT)","text":"Copyright © 2021 Jeroen Janssens. Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeroen Janssens. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Janssens J (2024). tmuxr: Manage 'tmux' Sessions, Windows, Panes. R package version 0.2.5, https://github.com/jeroenjanssens/tmuxr, https://jeroenjanssens.github.io/tmuxr.","code":"@Manual{,   title = {tmuxr: Manage 'tmux' Sessions, Windows, and Panes},   author = {Jeroen Janssens},   year = {2024},   note = {R package version 0.2.5, https://github.com/jeroenjanssens/tmuxr},   url = {https://jeroenjanssens.github.io/tmuxr}, }"},{"path":[]},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Manage tmux Sessions, Windows, and Panes","text":"tmuxr R package allows manage tmux interact processes runs. features pipeable API can create, control, capture tmux sessions, windows, panes.","code":""},{"path":"/index.html","id":"demonstration","dir":"","previous_headings":"","what":"Demonstration","title":"Manage tmux Sessions, Windows, and Panes","text":"recording demonstrates various capabilities tmuxr : running processes, sending keys, splitting windows, capturing panes. Note normally, managing tmux processes runs done detached mode, wouldn’t see anything, result .  look function reference learn tmuxr offer.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manage tmux Sessions, Windows, and Panes","text":"tmuxr can installed repository using remotes:","code":"# install.packages(\"remotes\") remotes::install_github(\"jeroenjanssens/tmuxr\")"},{"path":"/index.html","id":"compatibility","dir":"","previous_headings":"","what":"Compatibility","title":"Manage tmux Sessions, Windows, and Panes","text":"regularly test tmuxr Ubuntu tmux versions 2.1 3.4 macOS latest version tmux provided Homebrew. tmuxr might work Windows using Cygwin WSL, haven’t tested .","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Manage tmux Sessions, Windows, and Panes","text":"tmuxr package licensed MIT License.","code":""},{"path":"/reference/attach_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach to an existing tmux pane — attach_pane","title":"Attach to an existing tmux pane — attach_pane","text":"Attach existing tmux pane","code":""},{"path":"/reference/attach_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach to an existing tmux pane — attach_pane","text":"","code":"attach_pane(x, lookup_id = TRUE)"},{"path":"/reference/attach_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach to an existing tmux pane — attach_pane","text":"x integer string indicating name existing pane. lookup_id logical. FALSE, x assumed pane id. Default: TRUE.","code":""},{"path":"/reference/attach_pane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach to an existing tmux pane — attach_pane","text":"tmuxr_pane.","code":""},{"path":"/reference/attach_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach to an existing tmux session — attach_session","title":"Attach to an existing tmux session — attach_session","text":"Attach existing tmux session","code":""},{"path":"/reference/attach_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach to an existing tmux session — attach_session","text":"","code":"attach_session(x, lookup_id = TRUE)"},{"path":"/reference/attach_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach to an existing tmux session — attach_session","text":"x integer string indicating name existing window. lookup_id logical. FALSE, x assumed session id. Default: TRUE.","code":""},{"path":"/reference/attach_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach to an existing tmux session — attach_session","text":"tmuxr_session.","code":""},{"path":"/reference/attach_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach to an existing tmux window — attach_window","title":"Attach to an existing tmux window — attach_window","text":"Attach existing tmux window","code":""},{"path":"/reference/attach_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach to an existing tmux window — attach_window","text":"","code":"attach_window(x, lookup_id = TRUE)"},{"path":"/reference/attach_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach to an existing tmux window — attach_window","text":"x integer string indicating name existing window. lookup_id logical. FALSE, x assumed window id. Default: TRUE.","code":""},{"path":"/reference/attach_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach to an existing tmux window — attach_window","text":"tmuxr_window.","code":""},{"path":"/reference/capture_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Capture the contents of a tmux pane — capture_pane","title":"Capture the contents of a tmux pane — capture_pane","text":"Capture contents tmux pane","code":""},{"path":"/reference/capture_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Capture the contents of a tmux pane — capture_pane","text":"","code":"capture_pane(   target = NULL,   start = NULL,   end = NULL,   escape = FALSE,   escape_control = FALSE,   trailing_spaces = FALSE,   join = FALSE,   cat = FALSE )"},{"path":"/reference/capture_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Capture the contents of a tmux pane — capture_pane","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. NULL, currently active pane used. Default: NULL. start, end integer dash (-). First last lines capture. 0 first line visible pane negative integers lines history. dash (-) start start history end end visible pane. default capture visible contents pane. escape logical. TRUE, include escape sequences text background attributes. Default: FALSE. escape_control logical. TRUE, also escape control characters octal \\xxx. Default: FALSE. trailing_spaces logical. TRUE, preserve trailing spaces line. Default: FALSE. join logical. TRUE, join wrapped lines preserve trailing spaces line. Default: FALSE. cat logical. TRUE, concatenate lines one string. Default: FALSE.","code":""},{"path":"/reference/capture_pane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Capture the contents of a tmux pane — capture_pane","text":"vector strings one string cat TRUE.","code":""},{"path":[]},{"path":"/reference/clock_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a large clock — clock_mode","title":"Display a large clock — clock_mode","text":"Display large clock","code":""},{"path":"/reference/clock_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a large clock — clock_mode","text":"","code":"clock_mode(target = NULL)"},{"path":"/reference/clock_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a large clock — clock_mode","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. NULL, currently active pane used. Default: NULL.","code":""},{"path":"/reference/display_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a message — display_message","title":"Display a message — display_message","text":"Display message.","code":""},{"path":"/reference/display_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a message — display_message","text":"","code":"display_message(target = NULL, message = NULL, verbose = FALSE, stdout = TRUE)"},{"path":"/reference/display_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a message — display_message","text":"target session, window, pane. message string. message display. Refer FORMATS section tmux man page format. verbose logical. Print verbose logging format parsed? Default: FALSE. stdout logical. TRUE, message printed standard output. FALSE, message sent target. Default: TRUE.","code":""},{"path":"/reference/display_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display a message — display_message","text":"string stdout TRUE, otherwise NULL.","code":""},{"path":"/reference/display_message.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Display a message — display_message","text":"verbose argument supported tmux version < 2.9 ignored. verbose TRUE warning given.","code":""},{"path":"/reference/display_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display a message — display_message","text":"","code":"if (FALSE) { s <- new_session(\"jazz\", height = 12) display_message(s, \"#{window_active}\") display_message(s, \"session '#{session_name}' has height #{window_height}.\") kill_session(s) }"},{"path":"/reference/id.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifier of a tmux object — id","title":"Identifier of a tmux object — id","text":"Identifier tmux object","code":""},{"path":"/reference/id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifier of a tmux object — id","text":"","code":"id(target)"},{"path":"/reference/id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifier of a tmux object — id","text":"target tmuxr_session, tmuxr_window, tmuxr_pane.","code":""},{"path":"/reference/id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifier of a tmux object — id","text":"string.","code":""},{"path":"/reference/index-topic.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of a tmux object — index","title":"Index of a tmux object — index","text":"Index tmux object","code":""},{"path":"/reference/index-topic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index of a tmux object — index","text":"","code":"index(target)"},{"path":"/reference/index-topic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index of a tmux object — index","text":"target tmuxr_window tmuxr_pane.","code":""},{"path":"/reference/index-topic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Index of a tmux object — index","text":"integer.","code":""},{"path":"/reference/is_active.html","id":null,"dir":"Reference","previous_headings":"","what":"Is tmux object active? — is_active","title":"Is tmux object active? — is_active","text":"tmux object active?","code":""},{"path":"/reference/is_active.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is tmux object active? — is_active","text":"","code":"is_active(target)"},{"path":"/reference/is_active.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is tmux object active? — is_active","text":"target tmuxr_window tmuxr_pane.","code":""},{"path":"/reference/is_active.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is tmux object active? — is_active","text":"logical.","code":""},{"path":"/reference/is_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Is tmux installed correctly? — is_installed","title":"Is tmux installed correctly? — is_installed","text":"Check whether tmux installed correctly","code":""},{"path":"/reference/is_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is tmux installed correctly? — is_installed","text":"","code":"is_installed()"},{"path":"/reference/is_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is tmux installed correctly? — is_installed","text":"logical.","code":""},{"path":"/reference/is_running.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the tmux server running? — is_running","title":"Is the tmux server running? — is_running","text":"Check whether tmux server running.","code":""},{"path":"/reference/is_running.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the tmux server running? — is_running","text":"","code":"is_running()"},{"path":"/reference/is_running.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the tmux server running? — is_running","text":"logical.","code":""},{"path":"/reference/kill_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Kill a tmux pane — kill_pane","title":"Kill a tmux pane — kill_pane","text":"Destroy given pane. panes remain containing window, also destroyed.","code":""},{"path":"/reference/kill_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kill a tmux pane — kill_pane","text":"","code":"kill_pane(target = NULL, inverse = FALSE)"},{"path":"/reference/kill_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kill a tmux pane — kill_pane","text":"target tmuxr_pane. NULL, currently active pane used. Default: NULL. inverse logical. TRUE, kills target pane. Default: FALSE.","code":""},{"path":"/reference/kill_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Kill the tmux server — kill_server","title":"Kill the tmux server — kill_server","text":"Kill tmux server","code":""},{"path":"/reference/kill_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kill the tmux server — kill_server","text":"","code":"kill_server(silent = TRUE)"},{"path":"/reference/kill_server.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kill the tmux server — kill_server","text":"silent logical. possible error suppressed? Default: TRUE.","code":""},{"path":"/reference/kill_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Kill a tmux session — kill_session","title":"Kill a tmux session — kill_session","text":"Kill tmux session","code":""},{"path":"/reference/kill_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kill a tmux session — kill_session","text":"","code":"kill_session(target, inverse = FALSE)"},{"path":"/reference/kill_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kill a tmux session — kill_session","text":"target tmuxr_session. inverse logical. TRUE, kills target session. Default: FALSE.","code":""},{"path":"/reference/kill_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Kill a tmux window — kill_window","title":"Kill a tmux window — kill_window","text":"Kill tmux window","code":""},{"path":"/reference/kill_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kill a tmux window — kill_window","text":"","code":"kill_window(target, inverse = FALSE)"},{"path":"/reference/kill_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kill a tmux window — kill_window","text":"target tmuxr_window. inverse logical. TRUE, kills target window. Default: FALSE.","code":""},{"path":"/reference/layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Change layout of a tmux window — layout","title":"Change layout of a tmux window — layout","text":"Functions get set layout tmux window.","code":""},{"path":"/reference/layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change layout of a tmux window — layout","text":"","code":"layout(target = NULL)  layout(target) <- value  set_layout(target = NULL, value)  layout_even_horizontal(target = NULL)  layout_even_vertical(target = NULL)  layout_main_horizontal(target = NULL, height = NULL)  layout_main_vertical(target = NULL, width = NULL)  layout_tiled(target = NULL)  layout_next(target = NULL)  layout_previous(target = NULL)  layout_even(target = NULL)  layout_undo(target = NULL)  layout_rotate(target = NULL, reverse = FALSE)"},{"path":"/reference/layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change layout of a tmux window — layout","text":"target tmuxr_window. NULL, use currently active window. value string. Layout definition name preset. width, height integer. Width height main pane. reverse logical. TRUE direction rotate window reversed. Default: FALSE.","code":""},{"path":"/reference/layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change layout of a tmux window — layout","text":"string. Layout definition.","code":""},{"path":"/reference/list_panes.html","id":null,"dir":"Reference","previous_headings":"","what":"List tmux panes — list_panes","title":"List tmux panes — list_panes","text":"List tmux panes","code":""},{"path":"/reference/list_panes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tmux panes — list_panes","text":"","code":"list_panes(target = NULL)"},{"path":"/reference/list_panes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List tmux panes — list_panes","text":"target tmuxr_session tmuxr_window. parent session window. NULL panes sessions listed. Default: NULL.","code":""},{"path":"/reference/list_panes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tmux panes — list_panes","text":"list tmuxr_panes.","code":""},{"path":"/reference/list_sessions.html","id":null,"dir":"Reference","previous_headings":"","what":"List tmux sessions — list_sessions","title":"List tmux sessions — list_sessions","text":"List tmux sessions","code":""},{"path":"/reference/list_sessions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tmux sessions — list_sessions","text":"","code":"list_sessions()"},{"path":"/reference/list_sessions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tmux sessions — list_sessions","text":"list tmuxr_sessions.","code":""},{"path":"/reference/list_windows.html","id":null,"dir":"Reference","previous_headings":"","what":"List tmux windows — list_windows","title":"List tmux windows — list_windows","text":"List tmux windows","code":""},{"path":"/reference/list_windows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List tmux windows — list_windows","text":"","code":"list_windows(target = NULL)"},{"path":"/reference/list_windows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List tmux windows — list_windows","text":"target Name parent tmuxr_session. NULL (default), windows sessions listed.","code":""},{"path":"/reference/list_windows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List tmux windows — list_windows","text":"list tmuxr_windows.","code":""},{"path":"/reference/new_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new tmux pane — new_pane","title":"Create a new tmux pane — new_pane","text":"Create new pane splitting target.","code":""},{"path":"/reference/new_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new tmux pane — new_pane","text":"","code":"new_pane(   target = NULL,   vertical = TRUE,   size = NULL,   before = FALSE,   full = FALSE,   start_directory = NULL,   shell_command = NULL )  split_window(   target = NULL,   vertical = TRUE,   size = NULL,   before = FALSE,   full = FALSE,   start_directory = NULL,   shell_command = NULL )"},{"path":"/reference/new_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new tmux pane — new_pane","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. vertical logical. TRUE split target vertically, otherwise horizontally. Default: TRUE. size numeric. size new pane lines (vertical splits) characters (horizontal splits). less 0, size interpreted percentage. Default: NULL. logical. TRUE, create new pane left active pane. Default: FALSE. full logical. TRUE, create new pane spanning full window width (vertical splits) full window height (horizontal splits), instead splitting active pane. Default: FALSE. start_directory string. Working directory pane run . shell_command string. Shell command invoked creating pane. NULL, default shell used.","code":""},{"path":"/reference/new_pane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new tmux pane — new_pane","text":"tmuxr_pane.","code":""},{"path":"/reference/new_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new tmux session — new_session","title":"Create a new tmux session — new_session","text":"Create new tmux session name name.","code":""},{"path":"/reference/new_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new tmux session — new_session","text":"","code":"new_session(   name = NULL,   window_name = NULL,   start_directory = NULL,   width = 80,   height = 24,   detached = TRUE,   shell_command = NULL )"},{"path":"/reference/new_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new tmux session — new_session","text":"name string. Name session. NULL, name determined tmux, next unused integer (default starting 0). Default: NULL. window_name string. Name initial window. start_directory string. Working directory session run . width integer. Width initial window. Default: 80. height integer. Height initial window. Default: 24. detached logical. FALSE, R interpreter waits session killed. Default: TRUE. shell_command string. Shell command invoked creating session.","code":""},{"path":"/reference/new_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new tmux session — new_session","text":"tmuxr_session.","code":""},{"path":"/reference/new_session.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a new tmux session — new_session","text":"Prior tmux version 2.6, actual height one line less height.","code":""},{"path":"/reference/new_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new tmux session — new_session","text":"","code":"if (FALSE) { s <- new_session(\"foo\", shell_command = \"bash\", height = 10) list_sessions() kill_session(s) }"},{"path":"/reference/new_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new tmux window — new_window","title":"Create a new tmux window — new_window","text":"Create new tmux window name name. shell command completes, window closes.","code":""},{"path":"/reference/new_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new tmux window — new_window","text":"","code":"new_window(   target = NULL,   name = NULL,   focus = TRUE,   start_directory = NULL,   shell_command = NULL )"},{"path":"/reference/new_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new tmux window — new_window","text":"target tmuxr_session tmuxr_window. NULL, last session used. name string. Name window. NULL, name determined shell command. Default: NULL. focus logical. FALSE, session make new window current window. Default: TRUE. start_directory string. Working directory window run . shell_command string. Shell command invoked creating window. NULL, default shell used.","code":""},{"path":"/reference/new_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new tmux window — new_window","text":"tmuxr_window.","code":""},{"path":"/reference/new_window.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new tmux window — new_window","text":"","code":"if (FALSE) { s <- new_session() new_window() kill_session(s) }"},{"path":"/reference/object_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Name of a tmux object — object_name","title":"Name of a tmux object — object_name","text":"Functions get set name tmux session, window, pane.","code":""},{"path":"/reference/object_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name of a tmux object — object_name","text":"","code":"name(target)  name(target) <- value  set_name(target, value)"},{"path":"/reference/object_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name of a tmux object — object_name","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. value string. New name.","code":""},{"path":"/reference/object_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name of a tmux object — object_name","text":"string.","code":""},{"path":[]},{"path":"/reference/object_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Width and height of a tmux object — object_size","title":"Width and height of a tmux object — object_size","text":"Functions get set width height tmux session, window, pane.","code":""},{"path":"/reference/object_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Width and height of a tmux object — object_size","text":"","code":"width(target)  width(target) <- value  set_width(target, value)  height(target)  height(target) <- value  set_height(target, value)"},{"path":"/reference/object_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Width and height of a tmux object — object_size","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. value integer.","code":""},{"path":"/reference/object_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Width and height of a tmux object — object_size","text":"integer. new width height.","code":""},{"path":"/reference/object_size.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Width and height of a tmux object — object_size","text":"size tmuxr_pane can changed panes window.","code":""},{"path":[]},{"path":"/reference/pipe_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe contents of a tmux pane to a shell command — pipe_pane","title":"Pipe contents of a tmux pane to a shell command — pipe_pane","text":"Pipe contents tmux pane shell command","code":""},{"path":"/reference/pipe_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe contents of a tmux pane to a shell command — pipe_pane","text":"","code":"pipe_pane(   target = NULL,   shell_command = NULL,   stdout = TRUE,   stdin = FALSE,   open = FALSE )"},{"path":"/reference/pipe_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe contents of a tmux pane to a shell command — pipe_pane","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. shell_command String. NULL, current pipe () closed. Default: NULL. stdout Logical. Connect standard output pane shell_command? Default: TRUE. stdin Logical. Connect standard input pane shell_command? Default: FALSE. open Logical. open new pipe previous pipe exists. Default: FALSE.","code":""},{"path":"/reference/prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties of a tmux object — prop","title":"Properties of a tmux object — prop","text":"Get properties tmux object, including sessions, windows, panes.","code":""},{"path":"/reference/prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties of a tmux object — prop","text":"","code":"prop(target = NULL, property)"},{"path":"/reference/prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Properties of a tmux object — prop","text":"target tmuxr_session, tmuxr_window, tmuxr_session. Default: NULL. property string.","code":""},{"path":"/reference/prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Properties of a tmux object — prop","text":"string.","code":""},{"path":"/reference/prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Properties of a tmux object — prop","text":"","code":"if (FALSE) { s <- new_session() prop(s, \"session_created\") kill_session(s) }"},{"path":"/reference/rename_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a tmux session — rename_session","title":"Rename a tmux session — rename_session","text":"Rename tmux session","code":""},{"path":"/reference/rename_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a tmux session — rename_session","text":"","code":"rename_session(target, value)"},{"path":"/reference/rename_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a tmux session — rename_session","text":"target tmuxr_session. value String indicating new name session.","code":""},{"path":"/reference/rename_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename a tmux session — rename_session","text":"tmuxr_session.","code":""},{"path":"/reference/rename_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a tmux window — rename_window","title":"Rename a tmux window — rename_window","text":"Rename tmux window","code":""},{"path":"/reference/rename_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a tmux window — rename_window","text":"","code":"rename_window(target, value)"},{"path":"/reference/rename_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a tmux window — rename_window","text":"target tmuxr_window. value String indicating new name window.","code":""},{"path":"/reference/resize_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize a tmux pane — resize_pane","title":"Resize a tmux pane — resize_pane","text":"Resize tmux pane","code":""},{"path":"/reference/resize_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize a tmux pane — resize_pane","text":"","code":"resize_pane(target, width = NULL, height = NULL)"},{"path":"/reference/resize_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize a tmux pane — resize_pane","text":"target tmuxr_pane. width integer. Default: NULL. height integer. Default: NULL.","code":""},{"path":"/reference/resize_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Resize a tmux window — resize_window","title":"Resize a tmux window — resize_window","text":"Resize tmux window","code":""},{"path":"/reference/resize_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resize a tmux window — resize_window","text":"","code":"resize_window(target, width = NULL, height = NULL)"},{"path":"/reference/resize_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resize a tmux window — resize_window","text":"target tmuxr_session tmuxr_window. width integer. Default: NULL. height integer. Default: NULL.","code":""},{"path":"/reference/select_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a tmux pane — select_pane","title":"Select a tmux pane — select_pane","text":"Note selecting pane non-active window select window.","code":""},{"path":"/reference/select_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a tmux pane — select_pane","text":"","code":"select_pane(target = NULL, token = NULL)  select_pane_active(target = NULL)  select_pane_last(target = NULL)  select_pane_next(target = NULL)  select_pane_previous(target = NULL)  select_pane_top(target = NULL)  select_pane_bottom(target = NULL)  select_pane_left(target = NULL)  select_pane_right(target = NULL)  select_pane_top_left(target = NULL)  select_pane_top_right(target = NULL)  select_pane_bottom_left(target = NULL)  select_pane_bottom_right(target = NULL)  select_pane_up_of(target = NULL)  select_pane_down_of(target = NULL)  select_pane_left_of(target = NULL)  select_pane_right_of(target = NULL)"},{"path":"/reference/select_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a tmux pane — select_pane","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. NULL, currently active pane used. Default: NULL. token string. Default NULL.","code":""},{"path":"/reference/select_pane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a tmux pane — select_pane","text":"tmuxr_pane.","code":""},{"path":"/reference/select_window.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a tmux window — select_window","title":"Select a tmux window — select_window","text":"Select tmux window","code":""},{"path":"/reference/select_window.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a tmux window — select_window","text":"","code":"select_window(target = NULL, token = NULL)  select_window_active(target = NULL)  select_window_last(target = NULL)  select_window_next(target = NULL)  select_window_previous(target = NULL)  select_window_start(target = NULL)  select_window_end(target = NULL)"},{"path":"/reference/select_window.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a tmux window — select_window","text":"target tmuxr_session tmuxr_window. NULL, last session used. Default: NULL. token string. Default NULL.","code":""},{"path":"/reference/select_window.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a tmux window — select_window","text":"tmuxr_window.","code":""},{"path":"/reference/send_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Send keys to a tmux pane — send_keys","title":"Send keys to a tmux pane — send_keys","text":"Send keys tmux pane","code":""},{"path":"/reference/send_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send keys to a tmux pane — send_keys","text":"","code":"send_keys(target = NULL, ..., literal = FALSE, count = 1L)"},{"path":"/reference/send_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send keys to a tmux pane — send_keys","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. NULL, currently active pane used. Default: NULL. ... Strings. Keys send. literal logical. TRUE, key name lookup disabled keys processed literal UTF-8 characters. Default: FALSE. count integer. Number times keys sent. Default: 1L.","code":""},{"path":[]},{"path":"/reference/send_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send keys to a tmux pane — send_keys","text":"","code":"if (FALSE) { s <- new_session(shell_command = \"cat\") send_keys(s, \"Speak\", \"Space\", \"friend\") send_keys(s, \"BSpace\", count = 6L) send_keys(s, \"mellon and \") send_keys(s, \"enter\", \"!\", literal = TRUE) send_keys(s, \"enter\", literal = FALSE) capture_pane(s, start = 0L, end = 1L) kill_session(s) }"},{"path":"/reference/send_prefix.html","id":null,"dir":"Reference","previous_headings":"","what":"Send prefix to a tmux pane — send_prefix","title":"Send prefix to a tmux pane — send_prefix","text":"Send prefix tmux pane","code":""},{"path":"/reference/send_prefix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send prefix to a tmux pane — send_prefix","text":"","code":"send_prefix(target = NULL, secondary = FALSE)"},{"path":"/reference/send_prefix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send prefix to a tmux pane — send_prefix","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. NULL, currently active pane used. Default: NULL. secondary logical. TRUE, send secondary prefix. Default: FALSE.","code":""},{"path":"/reference/set_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set option — set_option","title":"Set option — set_option","text":"Set option","code":""},{"path":"/reference/set_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set option — set_option","text":"","code":"set_option(   target = NULL,   option,   value = NULL,   type = c(\"session\", \"window\", \"pane\", \"server\"),   append = FALSE,   expand = FALSE,   global = FALSE,   unset = FALSE,   override = TRUE )"},{"path":"/reference/set_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set option — set_option","text":"target tmuxr_session, tmuxr_window, tmuxr_pane. Default: NULL. option string. value string. Default: NULL. type string. Type option. Default: session. append logical. Default: FALSE. expand logical. Default: FALSE. global logical. Default: FALSE. unset logical. Default: FALSE. override logical. Default: TRUE.","code":""},{"path":"/reference/start_server.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the tmux server — start_server","title":"Start the tmux server — start_server","text":"Start tmux server","code":""},{"path":"/reference/start_server.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the tmux server — start_server","text":"","code":"start_server()"},{"path":"/reference/style.html","id":null,"dir":"Reference","previous_headings":"","what":"Style of a tmux window or pane — style","title":"Style of a tmux window or pane — style","text":"Functions get set layout tmux window pane.","code":""},{"path":"/reference/style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style of a tmux window or pane — style","text":"","code":"style(target)  style(target) <- value  set_style(target, value)"},{"path":"/reference/style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style of a tmux window or pane — style","text":"target tmuxr_window tmuxr_pane. value named list. Style definition.","code":""},{"path":"/reference/style_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Format and parse style strings — style_convert","title":"Format and parse style strings — style_convert","text":"Functions convert style string named list back.","code":""},{"path":"/reference/style_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format and parse style strings — style_convert","text":"","code":"strfstyle(...)  strpstyle(x)"},{"path":"/reference/style_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format and parse style strings — style_convert","text":"... Named strings logicals one named list. Colors attributes. x string.","code":""},{"path":"/reference/style_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format and parse style strings — style_convert","text":"string named list.","code":""},{"path":"/reference/style_convert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format and parse style strings — style_convert","text":"","code":"if (FALSE) { strfstyle(fg = \"red\", bg = \"#00ff00\", blink = TRUE, align = FALSE) strpstyle(\"fg=red,bg=#00ff00,blink,noalign\") }"},{"path":"/reference/swap_pane.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap two tmux windows or panes — swap_pane","title":"Swap two tmux windows or panes — swap_pane","text":"Swap two tmux windows panes","code":""},{"path":"/reference/swap_pane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap two tmux windows or panes — swap_pane","text":"","code":"swap_pane(from = NULL, to = NULL, reverse = FALSE, select = TRUE)  swap_window(from = NULL, to = NULL, select = TRUE)"},{"path":"/reference/swap_pane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap two tmux windows or panes — swap_pane","text":"tmuxr_window tmuxr_pane. tmuxr_window tmuxr_pane. reverse logical. select logical. FALSE, select new window pane. Default: TRUE.","code":""},{"path":"/reference/tmux_command.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a tmux command — tmux_command","title":"Execute a tmux command — tmux_command","text":"Execute tmux command","code":""},{"path":"/reference/tmux_command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a tmux command — tmux_command","text":"","code":"tmux_command(command, ..., .silent = FALSE)"},{"path":"/reference/tmux_command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a tmux command — tmux_command","text":"command string. ... Strings. Command flags. .silent Logical. Default: FALSE.","code":""},{"path":"/reference/tmux_command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute a tmux command — tmux_command","text":"vector strings.","code":""},{"path":"/reference/tmux_command.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Execute a tmux command — tmux_command","text":"","code":"if (FALSE) { s <- new_session() split_window(s) tmux_command(\"list-panes\", \"-t\" , \"0\") kill_session(s) }"},{"path":"/reference/tmux_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tmux version — tmux_version","title":"Get tmux version — tmux_version","text":"Get version tmux.","code":""},{"path":"/reference/tmux_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tmux version — tmux_version","text":"","code":"tmux_version(as_numeric = TRUE)"},{"path":"/reference/tmux_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tmux version — tmux_version","text":"as_numeric logical. TRUE, version number returned numeric. Default: TRUE.","code":""},{"path":"/reference/tmux_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tmux version — tmux_version","text":"numeric string.","code":""},{"path":"/reference/tmux_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tmux version — tmux_version","text":"","code":"if (FALSE) { tmux_version() tmux_version() >= 2.8 tmux_version(as_numeric = FALSE) }"},{"path":"/reference/tmuxr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tmuxr: Manage 'tmux' Sessions, Windows, and Panes — tmuxr-package","title":"tmuxr: Manage 'tmux' Sessions, Windows, and Panes — tmuxr-package","text":"Create, control, capture 'tmux' sessions, windows, panes     using pipeable API.","code":""},{"path":[]},{"path":"/reference/tmuxr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tmuxr: Manage 'tmux' Sessions, Windows, and Panes — tmuxr-package","text":"Maintainer: Jeroen Janssens jeroen@datascienceworkshops.com (ORCID) contributors: Data Science Workshops [copyright holder, funder]","code":""},{"path":"/news/index.html","id":"tmuxr-024","dir":"Changelog","previous_headings":"","what":"tmuxr 0.2.4","title":"tmuxr 0.2.4","text":"CRAN release: 2020-05-22 Fixed temporary socket file deleted testing.","code":""},{"path":"/news/index.html","id":"tmuxr-023","dir":"Changelog","previous_headings":"","what":"tmuxr 0.2.3","title":"tmuxr 0.2.3","text":"CRAN release: 2020-05-07 Ensured tests skipped tmux binary found (cf. Section 1.6 “Writing R Extensions”). Made tests robust giving tmux time call external tools. Marked example code . Added tmux versions 2.9a, 3.1a, 3.1b Travis-CI R-CMD-check GitHub Actions.","code":""},{"path":"/news/index.html","id":"tmuxr-022","dir":"Changelog","previous_headings":"","what":"tmuxr 0.2.2","title":"tmuxr 0.2.2","text":"CRAN release: 2020-05-02 Added functions change size, layout, style sessions, windows, panes. Added many unit tests ensure package works tmux version 2.1 . Replaced system2() calls processx::run() improved speed stability. Replaced id name identify sessions, windows, panes. Removed one dependency, namely {processx}. Removed notion prompt wait_*() derivative send_*() functions. part {rexpect}. Improved README structure reference.","code":""},{"path":"/news/index.html","id":"tmuxr-010","dir":"Changelog","previous_headings":"","what":"tmuxr 0.1.0","title":"tmuxr 0.1.0","text":"CRAN release: 2017-11-13 Added NEWS.md file track changes package.","code":""}]
